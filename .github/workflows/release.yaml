name: Release Build
on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  native-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        version: '3.x'

    - name: Install & display rust toolchain
      run: |
        rustup target add aarch64-unknown-linux-gnu
        rustup show

    - name: Check targets are installed correctly
      run: rustup target list --installed

    - name: Install zig
      uses: korandoru/setup-zig@v1
      with:
        zig-version: "master"

    - name: Install zigbuild
      run: cargo install cargo-zigbuild

    - name: Build optimized binary
      run: |
        cargo zigbuild --release --target aarch64-unknown-linux-gnu
        cargo build --release --target x86_64-unknown-linux-gnu

    - uses: actions/upload-artifact@master
      with:
        name: swanky-node-ubuntu-latest-aarch64
        path: target/aarch64-unknown-linux-gnu/release/swanky-node

    - uses: actions/upload-artifact@master
      with:
        name: swanky-node-ubuntu-latest-x86_64
        path: target/x86_64-unknown-linux-gnu/release/swanky-node

  publish-release-draft:
    needs: native-linux
    runs-on: ubuntu-latest
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Create Release Draft
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        body_path: .github/release-draft.md
        draft: true

  upload-binaries:
    needs: publish-release-draft
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu]
        arch: [aarch64, x86_64]
    steps:
    - name: Create download folder
      run: |
        mkdir -p ${{ matrix.os }}-${{ matrix.arch }}-bin

    - name: Download pre-built collator binary
      uses: actions/download-artifact@v3
      with:
        name: swanky-node-${{ matrix.os }}-latest-${{ matrix.arch }}
        path: ${{ matrix.os }}-${{ matrix.arch }}-bin

    - name: Make binary executable and tar gzip
      run: |
        cd ${{ matrix.os }}-${{ matrix.arch }}-bin
        chmod +x swanky-node
        tar zcvf swanky-node.tar.gz swanky-node

    - name: Upload binary artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.publish-release-draft.outputs.upload_url }}
        asset_path: ${{ matrix.os }}-${{ matrix.arch }}-bin/swanky-node.tar.gz
        asset_name: swanky-node-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
        asset_content_type: application/gzip
